import { ForeignId } from '../models/ForeignId';
import { Option } from '../models/Option';
export declare class Column {
    'foreignTableId'?: number;
    'description'?: string;
    'label': string;
    'type': ColumnTypeEnum;
    'optionCount'?: number;
    'foreignIds'?: Array<ForeignId>;
    'deleted'?: boolean;
    'name': string;
    'options'?: Array<Option>;
    'width'?: number;
    'id'?: string;
    'foreignIdsById'?: {
        [key: string]: ForeignId;
    };
    'foreignColumnId'?: number;
    'foreignIdsByName'?: {
        [key: string]: ForeignId;
    };
    static readonly discriminator: string | undefined;
    static readonly attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
        format: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
        format: string;
    }[];
    constructor();
}
export declare enum ColumnTypeEnum {
    Null = "NULL",
    Text = "TEXT",
    Number = "NUMBER",
    Url = "URL",
    Image = "IMAGE",
    Select = "SELECT",
    Multiselect = "MULTISELECT",
    Boolean = "BOOLEAN",
    Location = "LOCATION",
    Date = "DATE",
    Datetime = "DATETIME",
    Currency = "CURRENCY",
    Richtext = "RICHTEXT",
    ForeignId = "FOREIGN_ID",
    Video = "VIDEO",
    Cta = "CTA",
    File = "FILE"
}
