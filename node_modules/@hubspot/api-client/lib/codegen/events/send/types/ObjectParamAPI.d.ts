import { HttpInfo } from '../http/http';
import { Configuration } from '../configuration';
import { BehavioralEventHttpCompletionRequest } from '../models/BehavioralEventHttpCompletionRequest';
import { BehavioralEventsTrackingApiRequestFactory, BehavioralEventsTrackingApiResponseProcessor } from "../apis/BehavioralEventsTrackingApi";
export interface BehavioralEventsTrackingApiSendRequest {
    behavioralEventHttpCompletionRequest: BehavioralEventHttpCompletionRequest;
}
export declare class ObjectBehavioralEventsTrackingApi {
    private api;
    constructor(configuration: Configuration, requestFactory?: BehavioralEventsTrackingApiRequestFactory, responseProcessor?: BehavioralEventsTrackingApiResponseProcessor);
    sendWithHttpInfo(param: BehavioralEventsTrackingApiSendRequest, options?: Configuration): Promise<HttpInfo<void>>;
    send(param: BehavioralEventsTrackingApiSendRequest, options?: Configuration): Promise<void>;
}
